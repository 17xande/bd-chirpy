// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package database

import (
	"context"
)

const createUser = `-- name: CreateUser :one
insert into users (id, created_at, updated_at, email)
values (gen_random_uuid(), now(), now(), $1)
returning id, created_at, updated_at, email
`

func (q *Queries) CreateUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
	)
	return i, err
}

const deleteAllUsers = `-- name: DeleteAllUsers :execrows
delete from users
`

func (q *Queries) DeleteAllUsers(ctx context.Context) (int64, error) {
	result, err := q.db.ExecContext(ctx, deleteAllUsers)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected()
}
